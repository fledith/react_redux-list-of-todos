{"version":3,"sources":["store/loading.ts","store/currentTodo.ts","store/index.ts","api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","type","todo","payload","rootReducer","combineReducers","loadingReducer","loading","action","selectionTodoReducer","state","selectors","store","createStore","composeWithDevTools","applyMiddleware","thunk","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectedTodo","useSelector","dispatch","useDispatch","className","map","id","completed","title","onClick","TodoFilter","filter","inputValue","onFilter","onInputValue","onAppliedInputValue","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","useState","selectedUser","setSelectedUser","useEffect","userId","user","href","email","name","App","setTodos","setFilter","setInputValue","appliedInputValue","setAppliedInputValue","loadingActions","todosFromServer","finally","applyInputValue","useCallback","func","timerId","clearInterval","args","window","debounce","filterTodos","todoList","queryInput","length","includedTitle","toLowerCase","includes","filteredTodos","useMemo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1e35ca3.chunk.js","sourcesContent":["type StartLoadingAction = {\n  type: 'START_LOADING',\n};\n\ntype FinishLoadingAction = {\n  type: 'FINISH_LOADING',\n};\n\ntype Action = StartLoadingAction | FinishLoadingAction;\n\nexport const actions = {\n  startLoading: (): StartLoadingAction => ({\n    type: 'START_LOADING',\n  }),\n  finishLoading: (): FinishLoadingAction => ({\n    type: 'FINISH_LOADING',\n  }),\n};\n\nexport const loadingReducer = (loading = false, action: Action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return true;\n    case 'FINISH_LOADING':\n      return false;\n    default:\n      return loading;\n  }\n};\n","import { Todo } from '../types/Todo';\n\ntype SetTodoAction = {\n  type: 'SET_TODO',\n  payload: Todo,\n};\n\ntype UnsetTodoAction = {\n  type: 'UNSET_TODO'\n};\n\ntype Action = SetTodoAction | UnsetTodoAction;\n\nexport const actions = {\n  setTodo: (todo: Todo): SetTodoAction => ({\n    type: 'SET_TODO',\n    payload: todo,\n  }),\n  unsetTodo: (): UnsetTodoAction => ({\n    type: 'UNSET_TODO',\n  }),\n};\n\nexport const selectionTodoReducer = (\n  state: null | Todo = null,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'SET_TODO':\n      return action.payload;\n    case 'UNSET_TODO':\n      return null;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { loadingReducer } from './loading';\nimport { selectionTodoReducer } from './currentTodo';\n\nconst rootReducer = combineReducers({\n  loadingReducer,\n  selectionTodoReducer,\n});\n\ntype RootState = ReturnType<typeof rootReducer>;\n\nexport const selectors = {\n  getLoading: (state: RootState) => state.loadingReducer,\n  getTodo: (state: RootState) => state.selectionTodoReducer,\n};\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { selectors } from '../../store';\nimport { actions } from '../../store/currentTodo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList = ({ todos }: Props) => {\n  const selectedTodo = useSelector(selectors.getTodo);\n  const dispatch = useDispatch();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={selectedTodo?.id === todo.id\n              ? 'has-background-info-light'\n              : ''}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => (dispatch(actions.setTodo(todo)))}\n              >\n                <span className=\"icon\">\n                  {selectedTodo?.id === todo.id\n                    ? (<i className=\"far fa-eye-slash\" />)\n                    : (<i className=\"far fa-eye\" />)}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","interface Props {\n  filter: string;\n  inputValue: string;\n  onFilter: (filter: string) => void;\n  onInputValue: (inputValue: string) => void;\n  onAppliedInputValue: (appliedInputValue: string) => void;\n}\n\nexport const TodoFilter = ({\n  filter,\n  inputValue,\n  onFilter,\n  onInputValue,\n  onAppliedInputValue,\n}: Props) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => onFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={({ target }) => {\n            onInputValue(target.value);\n            onAppliedInputValue(target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onInputValue('');\n                onAppliedInputValue('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { selectors } from '../../store';\nimport { actions } from '../../store/currentTodo';\n\nexport const TodoModal = () => {\n  const selectedTodo = useSelector(selectors.getTodo);\n  const dispatch = useDispatch();\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(user => setSelectedUser(user));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                dispatch(actions.unsetTodo());\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { selectors } from './store';\nimport { actions as loadingActions } from './store/loading';\n\nconst debounce = (func: (arg: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearInterval(timerId);\n\n    timerId = window.setTimeout(func, delay, ...args);\n  };\n};\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectors.getLoading);\n  const selectedTodo = useSelector(selectors.getTodo);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n  const [appliedInputValue, setAppliedInputValue] = useState('');\n\n  useEffect(() => {\n    dispatch(loadingActions.startLoading());\n    getTodos()\n      .then(todosFromServer => setTodos(todosFromServer))\n      .finally(() => dispatch(loadingActions.finishLoading()));\n  }, []);\n\n  const applyInputValue = useCallback(\n    debounce(setAppliedInputValue, 400), [appliedInputValue],\n  );\n\n  const filterTodos = useCallback((todoList: Todo[], queryInput: string) => {\n    if (!todoList.length) {\n      return null;\n    }\n\n    return todoList.filter(todo => {\n      const includedTitle = todo.title.toLowerCase()\n        .includes(queryInput.toLowerCase());\n\n      switch (filter) {\n        case 'all':\n          return includedTitle;\n        case 'active':\n          return !todo.completed && includedTitle;\n        case 'completed':\n          return todo.completed && includedTitle;\n        default:\n          return todo;\n      }\n    });\n  }, [appliedInputValue, filter]);\n\n  const filteredTodos = useMemo(() => (\n    filterTodos(todos, appliedInputValue)\n  ), [todos, appliedInputValue, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                inputValue={inputValue}\n                onFilter={setFilter}\n                onInputValue={setInputValue}\n                onAppliedInputValue={applyInputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (<Loader />)}\n              {filteredTodos && (\n                <TodoList\n                  todos={filteredTodos}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}