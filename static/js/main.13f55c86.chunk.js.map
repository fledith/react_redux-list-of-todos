{"version":3,"sources":["store/loading.ts","store/currentTodo.ts","store/todos.ts","store/index.ts","api.ts","types/FilterType.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","type","todo","payload","todos","query","initialState","initial","filtered","rootReducer","combineReducers","loadingReducer","loading","action","selectionTodoReducer","state","todosReducer","filter","title","includes","completed","selectors","store","createStore","composeWithDevTools","applyMiddleware","thunk","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterType","TodoList","selectedTodo","useSelector","dispatch","useDispatch","className","map","id","onClick","TodoFilter","useState","filterBy","setFilterBy","setQuery","appliedQuery","setAppliedQuery","applyInputValue","useCallback","func","timerId","clearInterval","args","window","debounce","useEffect","ALL","todosActions","COMPLETED","ACTIVE","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","selectedUser","setSelectedUser","userId","user","href","email","name","App","loadingActions","todosFromServer","finally","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13f55c86.chunk.js","sourcesContent":["type StartLoadingAction = {\n  type: 'START_LOADING',\n};\n\ntype FinishLoadingAction = {\n  type: 'FINISH_LOADING',\n};\n\ntype Action = StartLoadingAction | FinishLoadingAction;\n\nexport const actions = {\n  startLoading: (): StartLoadingAction => ({\n    type: 'START_LOADING',\n  }),\n  finishLoading: (): FinishLoadingAction => ({\n    type: 'FINISH_LOADING',\n  }),\n};\n\nexport const loadingReducer = (loading = false, action: Action) => {\n  switch (action.type) {\n    case 'START_LOADING':\n      return true;\n    case 'FINISH_LOADING':\n      return false;\n    default:\n      return loading;\n  }\n};\n","import { Todo } from '../types/Todo';\n\ntype SetTodoAction = {\n  type: 'SET_TODO',\n  payload: Todo,\n};\n\ntype UnsetTodoAction = {\n  type: 'UNSET_TODO'\n};\n\ntype Action = SetTodoAction | UnsetTodoAction;\n\nexport const actions = {\n  setTodo: (todo: Todo): SetTodoAction => ({\n    type: 'SET_TODO',\n    payload: todo,\n  }),\n  unsetTodo: (): UnsetTodoAction => ({\n    type: 'UNSET_TODO',\n  }),\n};\n\nexport const selectionTodoReducer = (\n  state: null | Todo = null,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'SET_TODO':\n      return action.payload;\n    case 'UNSET_TODO':\n      return null;\n    default:\n      return state;\n  }\n};\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'SET_TODOS';\n  payload: Todo[];\n};\n\ntype ClearFilterAction = {\n  type: 'CLEAR_FILTER';\n  payload: string;\n};\n\ntype FilterByCompletedAction = {\n  type: 'FILTER_BY_COMPLETED';\n  payload: string;\n};\n\ntype FilterByActiveAction = {\n  type: 'FILTER_BY_ACTIVE';\n  payload: string;\n};\n\ntype Action = (SetTodosAction\n| ClearFilterAction\n| FilterByCompletedAction\n| FilterByActiveAction);\n\nexport const actions = {\n  setTodos: (todos: Todo[]): SetTodosAction => ({\n    type: 'SET_TODOS',\n    payload: todos,\n  }),\n  clearFilter: (query: string): ClearFilterAction => ({\n    type: 'CLEAR_FILTER',\n    payload: query,\n  }),\n  setFilterByCompleted: (query: string): FilterByCompletedAction => ({\n    type: 'FILTER_BY_COMPLETED',\n    payload: query,\n  }),\n  setFilterByActive: (query: string): FilterByActiveAction => ({\n    type: 'FILTER_BY_ACTIVE',\n    payload: query,\n  }),\n};\n\ntype State = {\n  initial: Todo[];\n  filtered: Todo[];\n};\n\nconst initialState: State = {\n  initial: [],\n  filtered: [],\n};\n\nexport const todosReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case 'SET_TODOS':\n      return {\n        initial: action.payload,\n        filtered: action.payload,\n      };\n    case 'CLEAR_FILTER':\n      return {\n        ...state,\n        filtered: state.initial\n          .filter(todo => todo.title.includes(action.payload)),\n      };\n    case 'FILTER_BY_COMPLETED':\n      return {\n        ...state,\n        filtered: state.initial?.filter(todo => todo.completed\n          && todo.title.includes(action.payload)),\n      };\n    case 'FILTER_BY_ACTIVE':\n      return {\n        ...state,\n        filtered: state.initial?.filter(todo => !todo.completed\n          && todo.title.includes(action.payload)),\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { loadingReducer } from './loading';\nimport { selectionTodoReducer } from './currentTodo';\nimport { todosReducer } from './todos';\n\nconst rootReducer = combineReducers({\n  loadingReducer,\n  selectionTodoReducer,\n  todosReducer,\n});\n\ntype RootState = ReturnType<typeof rootReducer>;\n\nexport const selectors = {\n  getLoading: (state: RootState) => state.loadingReducer,\n  getTodo: (state: RootState) => state.selectionTodoReducer,\n  getTodos: (state: RootState) => state.todosReducer,\n};\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectors } from '../../store';\nimport { actions } from '../../store/currentTodo';\n\nexport const TodoList = () => {\n  const selectedTodo = useSelector(selectors.getTodo);\n  const todos = useSelector(selectors.getTodos);\n  const dispatch = useDispatch();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.filtered.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={selectedTodo?.id === todo.id\n              ? 'has-background-info-light'\n              : ''}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => (dispatch(actions.setTodo(todo)))}\n              >\n                <span className=\"icon\">\n                  {selectedTodo?.id === todo.id\n                    ? (<i className=\"far fa-eye-slash\" />)\n                    : (<i className=\"far fa-eye\" />)}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FilterType } from '../../types/FilterType';\nimport { actions as todosActions } from '../../store/todos';\n\nconst debounce = (func: (arg: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearInterval(timerId);\n\n    timerId = window.setTimeout(func, delay, ...args);\n  };\n};\n\nexport const TodoFilter = () => {\n  const dispatch = useDispatch();\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n\n  const applyInputValue = useCallback(\n    debounce(setAppliedQuery, 400), [appliedQuery],\n  );\n\n  useEffect(() => {\n    switch (filterBy) {\n      case FilterType.ALL:\n        dispatch(todosActions.clearFilter(appliedQuery));\n\n        break;\n      case FilterType.COMPLETED:\n        dispatch(todosActions.setFilterByCompleted(appliedQuery));\n\n        break;\n      case FilterType.ACTIVE:\n        dispatch(todosActions.setFilterByActive(appliedQuery));\n\n        break;\n      default:\n        dispatch(todosActions.clearFilter(appliedQuery));\n    }\n  }, [filterBy, appliedQuery]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={(event) => setFilterBy(event.target.value)}\n          >\n            <option value={FilterType.ALL}>All</option>\n            <option value={FilterType.ACTIVE}>Active</option>\n            <option value={FilterType.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={({ target }) => {\n            setQuery(target.value);\n            applyInputValue(target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                applyInputValue('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { selectors } from '../../store';\nimport { actions } from '../../store/currentTodo';\n\nexport const TodoModal = () => {\n  const selectedTodo = useSelector(selectors.getTodo);\n  const dispatch = useDispatch();\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then(user => setSelectedUser(user));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                dispatch(actions.unsetTodo());\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTodos } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { selectors } from './store';\nimport { actions as loadingActions } from './store/loading';\nimport { actions as todosActions } from './store/todos';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectors.getLoading);\n  const selectedTodo = useSelector(selectors.getTodo);\n  const todos = useSelector(selectors.getTodos);\n\n  useEffect(() => {\n    dispatch(loadingActions.startLoading());\n    getTodos()\n      .then(todosFromServer => dispatch(todosActions.setTodos(todosFromServer)))\n      .finally(() => dispatch(loadingActions.finishLoading()));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && (<Loader />)}\n              {todos.filtered.length > 0 && (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      { selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}